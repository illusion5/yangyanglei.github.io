<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>幻境博客</title>
  
  <subtitle>java学习</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yangyl.top/"/>
  <updated>2017-11-29T09:30:24.487Z</updated>
  <id>http://yangyl.top/</id>
  
  <author>
    <name>yangyang lei</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git服务器搭建</title>
    <link href="http://yangyl.top/2017/11/29/git_server_build/"/>
    <id>http://yangyl.top/2017/11/29/git_server_build/</id>
    <published>2017-11-29T06:33:28.000Z</published>
    <updated>2017-11-29T09:30:24.487Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><ul><li>CentOS7(64位)</li><li>Xshell 5</li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="服务器安装git"><a href="#服务器安装git" class="headerlink" title="服务器安装git"></a>服务器安装git</h3><p>我使用的是root账号<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@mini01 ~]# yum install -y git   #使用yum方式安装</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>查看是否安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@mini01 ~]# git --version    #查询git版本</span><br><span class="line">git version 1.8.3.1</span><br></pre></td></tr></table></figure><h3 id="创建git用户，管理git服务"><a href="#创建git用户，管理git服务" class="headerlink" title="创建git用户，管理git服务"></a>创建git用户，管理git服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@mini01 ~]# useradd git  #创建git用户</span><br><span class="line">[root@mini01 ~]# passwd git</span><br><span class="line">更改用户 git 的密码 。</span><br><span class="line">新的 密码：</span><br><span class="line">无效的密码： 密码少于 8 个字符</span><br><span class="line">重新输入新的 密码：</span><br><span class="line">passwd：所有的身份验证令牌已经成功更新。</span><br><span class="line">[root@mini01 ~]# cd /home  #切换到home路径</span><br><span class="line">[root@mini01 home]# ll  #查询有那些用户</span><br><span class="line">总用量 0</span><br><span class="line">drwx------. 2 git git 62 11月 29 15:45 git</span><br></pre></td></tr></table></figure><p>创建密码的时候，如果输入的是简单密码的话会提示<br><code>无效的密码： 密码少于 8 个字符</code>之类，不用管它继续输入就行</p><h3 id="创建git仓库"><a href="#创建git仓库" class="headerlink" title="创建git仓库"></a>创建git仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@mini01 home]# cd git  #进入git目录</span><br><span class="line"> mkdir -p ./repository/gittest.git#创建repository仓库及gittest.git测试项目目录</span><br><span class="line">[root@mini01 git]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 3 root root 25 11月 29 15:58 repository</span><br><span class="line">[root@mini01 git]# cd repository/</span><br><span class="line">[root@mini01 repository]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 11月 29 15:58 gittest.git</span><br><span class="line">[root@mini01 repository]# git init --bare ./gittest.git#初始化裸仓库</span><br><span class="line">初始化空的 Git 版本库于 /home/git/repository/gittest.git/</span><br><span class="line">[root@mini01 repository]# ll ./gittest.git/ #查看gittest.git目录的结构</span><br><span class="line">总用量 12</span><br><span class="line">drwxr-xr-x. 2 root root   6 11月 29 16:03 branches</span><br><span class="line">-rw-r--r--. 1 root root  66 11月 29 16:03 config</span><br><span class="line">-rw-r--r--. 1 root root  73 11月 29 16:03 description</span><br><span class="line">-rw-r--r--. 1 root root  23 11月 29 16:03 HEAD</span><br><span class="line">drwxr-xr-x. 2 root root 242 11月 29 16:03 hooks</span><br><span class="line">drwxr-xr-x. 2 root root  21 11月 29 16:03 info</span><br><span class="line">drwxr-xr-x. 4 root root  30 11月 29 16:03 objects</span><br><span class="line">drwxr-xr-x. 4 root root  31 11月 29 16:03 refs</span><br><span class="line">[root@mini01 repository]# cd ../</span><br><span class="line">[root@mini01 git]# chown -R git:git repository/#将拥有者改为git用户</span><br><span class="line">[root@mini01 git]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 3 git git 25 11月 29 15:58 repository</span><br></pre></td></tr></table></figure><h3 id="本地克隆服务器gittest-git项目"><a href="#本地克隆服务器gittest-git项目" class="headerlink" title="本地克隆服务器gittest.git项目"></a>本地克隆服务器gittest.git项目</h3><p>我使用的win10系统，本地安装好git后，右键进入Git Bash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">lyy0525@DESKTOP-LHUF29F MINGW64 /d</span><br><span class="line">$ cd e:#进入e盘</span><br><span class="line">lyy0525@DESKTOP-LHUF29F MINGW64 /e</span><br><span class="line">$ mkdir gittest</span><br><span class="line">lyy0525@DESKTOP-LHUF29F MINGW64 /e</span><br><span class="line">$ cd gittest/</span><br><span class="line">lyy0525@DESKTOP-LHUF29F MINGW64 /e/gittest</span><br><span class="line">$ git clone git@服务器公网IP地址:/home/git/repository/gittest.git ./  #IP地址后面跟冒号，冒号后面是刚才初始化的项目文件夹的绝对路径 ./指定克隆当前目录</span><br><span class="line"></span><br><span class="line">lyy0525@DESKTOP-LHUF29F MINGW64 /e/gittest</span><br><span class="line">$ git clone git@192.168.200.130:/home/git/repository/gittest.git</span><br><span class="line">Cloning into &apos;gittest&apos;...</span><br><span class="line">The authenticity of host &apos;192.168.200.130 (192.168.200.130)&apos; can&apos;t be established.</span><br><span class="line">ECDSA key fingerprint is SHA256:lVUk+TDLLas5oGaQLBteDAOHZWUWL+fSm6sScDSDtVE.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added &apos;192.168.200.130&apos; (ECDSA) to the list of known hosts.</span><br><span class="line">git@192.168.200.130&apos;s password:</span><br><span class="line">warning: You appear to have cloned an empty repository.</span><br><span class="line">lyy0525@DESKTOP-LHUF29F MINGW64 /e/gittest (master)</span><br><span class="line">$ ll -a#查看所有文件</span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x 1 lyy0525 197121 0 11月 29 16:29 ./</span><br><span class="line">drwxr-xr-x 1 lyy0525 197121 0 11月 29 16:16 ../</span><br><span class="line">drwxr-xr-x 1 lyy0525 197121 0 11月 29 16:29 .git/</span><br></pre></td></tr></table></figure><h3 id="客户端创建-SSH-公钥和私钥"><a href="#客户端创建-SSH-公钥和私钥" class="headerlink" title="客户端创建 SSH 公钥和私钥"></a>客户端创建 SSH 公钥和私钥</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>默认会生成到C:\Users\用户名.ssh文件夹下<br>id_rsa 私钥<br>id_rsa.pub 公钥</p><h3 id="服务器打开RSA认证"><a href="#服务器打开RSA认证" class="headerlink" title="服务器打开RSA认证"></a>服务器打开RSA认证</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@mini01 git]# vi /etc/ssh/sshd_config#编辑配置文件</span><br><span class="line">#去掉下面三行的#号 </span><br><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile      .ssh/authorized_keys</span><br><span class="line">[root@mini01 git]# service sshd restart</span><br><span class="line">Redirecting to /bin/systemctl restart  sshd.service</span><br></pre></td></tr></table></figure><p>在 /home/git/ 下创建.ssh目录及.ssh目录下的authorized_key文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@mini01 git]# cd /home/git/</span><br><span class="line">[root@mini01 git]# pwd</span><br><span class="line">/home/git</span><br><span class="line">[root@mini01 git]# ll -a</span><br><span class="line">总用量 12</span><br><span class="line">drwx------. 4 git  git   92 11月 29 16:45 .</span><br><span class="line">drwxr-xr-x. 3 root root  17 11月 29 15:45 ..</span><br><span class="line">-rw-r--r--. 1 git  git   18 8月   3 2016 .bash_logout</span><br><span class="line">-rw-r--r--. 1 git  git  193 8月   3 2016 .bash_profile</span><br><span class="line">-rw-r--r--. 1 git  git  231 8月   3 2016 .bashrc</span><br><span class="line">drwxr-xr-x. 3 git  git   25 11月 29 15:58 repository</span><br><span class="line">drwxr-xr-x. 2 root root   6 11月 29 16:45 .ssh</span><br><span class="line">[root@mini01 git]# cd .ssh/</span><br><span class="line">[root@mini01 .ssh]# vim authorized_keys #编辑authorized_keys并把刚才生成的id_rsa.pub中的内容，粘贴进去，保存并退出</span><br><span class="line">[root@mini01 .ssh]# ll</span><br><span class="line">总用量 4</span><br><span class="line">-rw-r--r--. 1 root root 395 11月 29 16:47 authorized_keys</span><br><span class="line">[root@mini01 .ssh]# cat authorized_keys#查看文件内容</span><br><span class="line">[root@mini01 .ssh]# cd ../</span><br><span class="line">[root@mini01 git]# chown -R git:git .ssh/#改变文件所属用户</span><br><span class="line">[root@mini01 git]# ll -a | grep .ssh</span><br><span class="line">drwxr-xr-x. 2 git  git   29 11月 29 16:47 .ssh</span><br></pre></td></tr></table></figure><p>修改 .ssh 目录的权限为 700<br>修改 .ssh/authorized_keys 文件的权限为 600</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@mini01 git]# chmod 700 .ssh</span><br><span class="line">[root@mini01 git]# chmod 600 .ssh/authorized_keys</span><br></pre></td></tr></table></figure><h3 id="本地pull项目"><a href="#本地pull项目" class="headerlink" title="本地pull项目"></a>本地pull项目</h3><p>这次不用再输入密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lyy0525@DESKTOP-LHUF29F MINGW64 /e/gittest (master)</span><br><span class="line">$ git pull</span><br><span class="line">Your configuration specifies to merge with the ref &apos;refs/heads/master&apos;</span><br><span class="line">from the remote, but no such ref was fetched.</span><br></pre></td></tr></table></figure><h3 id="禁止-git-用户-ssh-登录服务器"><a href="#禁止-git-用户-ssh-登录服务器" class="headerlink" title="禁止 git 用户 ssh 登录服务器"></a>禁止 git 用户 ssh 登录服务器</h3><p>编辑 /etc/passwd</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@mini01 git]# whereis git-shell#首先查看git-shell 所在位置</span><br><span class="line">git-shell: /usr/bin/git-shell /usr/share/man/man1/git-shell.1.gz</span><br><span class="line">[root@mini01 git]# vim /etc/passwd#编辑文件</span><br></pre></td></tr></table></figure><p>找到 <code>git:x:1000:1000::/home/git:/bin/bash</code>    <br><br>修改为 <code>git:x:1000:1000::/home/git:/usr/bin/git-shell</code></p><p>此时 git 用户可以正常通过 ssh 使用 git，但无法通过 ssh 登录系统。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;系统环境&quot;&gt;&lt;a href=&quot;#系统环境&quot; class=&quot;headerlink&quot; title=&quot;系统环境&quot;&gt;&lt;/a&gt;系统环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;CentOS7(64位)&lt;/li&gt;
&lt;li&gt;Xshell 5&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h2&gt;&lt;h3 id=&quot;服务器安装git&quot;&gt;&lt;a href=&quot;#服务器安装git&quot; class=&quot;headerlink&quot; title=&quot;服务器安装git&quot;&gt;&lt;/a&gt;服务器安装git&lt;/h3&gt;&lt;p&gt;我使用的是root账号&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@mini01 ~]# yum install -y git   #使用yum方式安装&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://yangyl.top/tags/git/"/>
    
      <category term="linux" scheme="http://yangyl.top/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>小说爬取二</title>
    <link href="http://yangyl.top/2017/11/21/biquge-download2/"/>
    <id>http://yangyl.top/2017/11/21/biquge-download2/</id>
    <published>2017-11-21T12:29:49.000Z</published>
    <updated>2017-11-22T08:46:33.727Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>前一篇我已经写过一套代码方案了，基本上能够达到我想要的目的，但是只能开一个线程顺序运行，速度有些限制。于是，我变思考了另一种方案，方案的大体思路是下载页面的时候，启动多个线程进行，每一章分别保存到本地，文件名为章节序号名，最后在合并成一个文件。这样就不存在并发问题了，章节顺序也不会错乱。<br><a id="more"></a></p><h4 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h4><p>爬虫处理及解析类有部分变动<br>主要添加添加代码：<br><code>page.putField(&quot;title&quot;,title);</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 爬虫处理及解析类</span><br><span class="line"> */</span><br><span class="line">public class BiQuGePageProcessor implements PageProcessor &#123;</span><br><span class="line"></span><br><span class="line">    private Site site = Site.me().setRetryTimes(3).setSleepTime(200).setCharset(&quot;UTF-8&quot;).setTimeOut(10000);</span><br><span class="line"></span><br><span class="line">    private String replaceStr = &quot;\n&quot; + (char) 12288 + (char) 12288;//替换后字符串</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void process(Page page) &#123;</span><br><span class="line">        List&lt;String&gt; all = page.getHtml().css(&quot;div.bottem2&quot;).links().all();//获取链接</span><br><span class="line"></span><br><span class="line">        if (all.get(1).equals(all.get(2))) &#123;//如果下一章链接内容 和目录链接相同 说明到最后一章了</span><br><span class="line">            page.putField(&quot;end&quot;, &quot;end&quot;);//设置结束标记</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            page.addTargetRequest(all.get(2));//添加下一章的链接到处理队列</span><br><span class="line">        &#125;</span><br><span class="line">        //解析文章标题</span><br><span class="line">        String title = page.getHtml().xpath(&quot;//div[@class=bookname]/h1/text()&quot;).toString();</span><br><span class="line"></span><br><span class="line">        page.putField(&quot;title&quot;,title);</span><br><span class="line"></span><br><span class="line">        //解析文档内容</span><br><span class="line">        String content = page.getHtml().xpath(&quot;//div[@id=content]/text()&quot;).toString();</span><br><span class="line">        content = content.replaceAll((char) 12288 + &quot;&#123;2,&#125;&quot;, replaceStr) //(char)12288 全角空格 两个以上全角空格替换为换行符加两个全角空格</span><br><span class="line">                .replaceAll((char) 160 + &quot;&#123;2,&#125;&quot;, replaceStr); // (char)160 半角空格 两个以上半角空格替换为换行符加两个全角空格</span><br><span class="line"></span><br><span class="line">        //设置要处理的文件内容</span><br><span class="line">        page.putField(&quot;content&quot;, title + replaceStr + content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Site getSite() &#123;</span><br><span class="line">        return site;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        HttpClientDownloader httpClientDownloader = new HttpClientDownloader();</span><br><span class="line">        //设置代理ip</span><br><span class="line">//        httpClientDownloader.setProxyProvider(SimpleProxyProvider.from(</span><br><span class="line">//                new Proxy(&quot;221.233.62.43&quot;,808)</span><br><span class="line">//                ,new Proxy(&quot;125.124.161.221&quot;,808)));</span><br><span class="line"></span><br><span class="line">        httpClientDownloader.setThread(30);</span><br><span class="line">        //启动爬虫</span><br><span class="line">        Spider.create(new BiQuGePageProcessor())</span><br><span class="line">                .addUrl(&quot;http://www.biqudu.com/0_903/1823602.html&quot;)</span><br><span class="line">                .addPipeline(new NovelPipeline2(&quot;D:\\data&quot;))</span><br><span class="line">                .thread(10).run();//启动多个线程的话，章节顺序可能会错乱</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改NovelPipeline为NovelPipeline2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">**</span><br><span class="line"> * 此类参考JsonFilePipeline改造</span><br><span class="line"> */</span><br><span class="line">public class NovelPipeline2 extends FilePersistentBase implements Pipeline &#123;</span><br><span class="line"></span><br><span class="line">    private Logger logger = LoggerFactory.getLogger(getClass());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public NovelPipeline2(String path) &#123;</span><br><span class="line">        setPath(path);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void process(ResultItems resultItems, Task task) &#123;</span><br><span class="line">        //没有标题的文章不添加</span><br><span class="line">        String title=(String)resultItems.get(&quot;title&quot;);</span><br><span class="line">        String fileName = getFileName(title);</span><br><span class="line">        if(StringUtils.isBlank(fileName))&#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        try &#123;</span><br><span class="line">            PrintWriter printWriter = new PrintWriter(new FileWriter(getFile(path+fileName+ &quot;.txt&quot;)));</span><br><span class="line">            printWriter.write((String)resultItems.get(&quot;content&quot;));</span><br><span class="line">            printWriter.close();</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            logger.warn(&quot;write file error&quot;, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //获取文件名</span><br><span class="line">    private String getFileName(String title)&#123;</span><br><span class="line">        if(StringUtils.isBlank(title))&#123;</span><br><span class="line">            return &quot;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        //转换章节名为阿拉伯数字</span><br><span class="line">        String pattern=(char)32+&quot;*第(.+)章&quot;+(char)32+&quot;.*&quot;;</span><br><span class="line">        Pattern p = Pattern.compile(pattern);</span><br><span class="line">        Matcher m = p.matcher(title);</span><br><span class="line">        if(m.find())&#123;</span><br><span class="line">            if(m.group(1)!=null)&#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    //格式化文件名</span><br><span class="line">                    return String.format(&quot;%1$04d&quot;, Long.parseLong(m.group(1)));</span><br><span class="line">                &#125;catch (Exception e)&#123;</span><br><span class="line">                    return String.format(&quot;%1$04d&quot;,ChinessToNum.convert(m.group(1)));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return &quot;&quot;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>中文数字转阿拉伯数字工具类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 中文数字转阿拉伯数字工具类</span><br><span class="line"> * 该工具类没有做大量测试，可能会有bug存在</span><br><span class="line"> */</span><br><span class="line">public class ChinessToNum &#123;</span><br><span class="line"></span><br><span class="line">    private static final Map&lt;String,Long&gt; number=new HashMap();</span><br><span class="line">    private static final Map&lt;String,Long&gt; units=new LinkedHashMap&lt;&gt;();</span><br><span class="line">    static &#123;</span><br><span class="line">        number.put(&quot;零&quot;,0L);</span><br><span class="line">        number.put(&quot;一&quot;,1L);</span><br><span class="line">        number.put(&quot;二&quot;,2L);</span><br><span class="line">        number.put(&quot;三&quot;,3L);</span><br><span class="line">        number.put(&quot;四&quot;,4L);</span><br><span class="line">        number.put(&quot;五&quot;,5L);</span><br><span class="line">        number.put(&quot;六&quot;,6L);</span><br><span class="line">        number.put(&quot;七&quot;,7L);</span><br><span class="line">        number.put(&quot;八&quot;,8L);</span><br><span class="line">        number.put(&quot;九&quot;,9L);</span><br><span class="line"></span><br><span class="line">        units.put(&quot;千&quot;,1000L);</span><br><span class="line">        units.put(&quot;百&quot;,100L);</span><br><span class="line">        units.put(&quot;十&quot;,10L);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 方法一</span><br><span class="line">     * 该方法仅适用于小于一万的转换,因为小说章节最多不会超过一万章</span><br><span class="line">     * @param chiness</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static long convert1(String chiness)&#123;</span><br><span class="line">        chiness=removeZero(chiness);</span><br><span class="line">        long sum=0L;</span><br><span class="line">        Set&lt;String&gt; unitSet = units.keySet();</span><br><span class="line">//        System.out.println(strings);</span><br><span class="line">        for (String unit:unitSet) &#123;</span><br><span class="line">            String[] split = chiness.split(unit);</span><br><span class="line">            if(split.length&gt;1)&#123;</span><br><span class="line">                if(&quot;十&quot;.equals(unit) &amp;&amp; &quot;&quot;.equals(split[0]))&#123;</span><br><span class="line">                    sum+=10L;</span><br><span class="line">                &#125;else &#123;</span><br><span class="line">                    sum+=(number.get(split[0])*units.get(unit));</span><br><span class="line">                &#125;</span><br><span class="line">                chiness=split[1];</span><br><span class="line">            &#125;else &#123;</span><br><span class="line">                if( split[0].length()!=chiness.length())&#123;</span><br><span class="line">                    sum+=(number.get(split[0])*units.get(unit));</span><br><span class="line">                    return sum;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if(&quot;&quot;.equals(chiness))&#123;</span><br><span class="line">                return sum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        sum+=(number.get(chiness));</span><br><span class="line">        return sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 方法二</span><br><span class="line">     * 该方法仅适用于小于一万的转换,因为小说章节最多不会超过一万章</span><br><span class="line">     * @param chiness</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static long convert(String chiness)&#123;</span><br><span class="line">        long sum=0L;</span><br><span class="line">        chiness=removeZero(chiness);</span><br><span class="line">        String pattern3=&quot;((.)千)?((.)百)?((.)?十)?(.*)&quot;;</span><br><span class="line">        Pattern p = Pattern.compile(pattern3);</span><br><span class="line">        Matcher m= p.matcher(chiness);</span><br><span class="line">        if(m.find())&#123;</span><br><span class="line">//            System.out.println(&quot;Found value: &quot; + m.group(0) );</span><br><span class="line">//            System.out.println(&quot;Found value: &quot; + m.group(1) );</span><br><span class="line">//            System.out.println(&quot;Found value: &quot; + m.group(2) );</span><br><span class="line">//            System.out.println(&quot;Found value: &quot; + m.group(3) );</span><br><span class="line">//            System.out.println(&quot;Found value: &quot; + m.group(4) );</span><br><span class="line">//            System.out.println(&quot;Found value: &quot; + m.group(5) );</span><br><span class="line">//            System.out.println(&quot;Found value: &quot; + m.group(6) );</span><br><span class="line">//            System.out.println(&quot;Found value: &quot; + m.group(7) );</span><br><span class="line"></span><br><span class="line">            sum+=(getNum(m.group(2),false)*1000L);</span><br><span class="line">            sum+=(getNum(m.group(4),false)*100L);</span><br><span class="line">            sum+=(getNum(m.group(6),m.group(5)!=null)*10L);</span><br><span class="line">            sum+=(getNum(m.group(7),false)*1L);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">//        System.out.println(sum);</span><br><span class="line">        return sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //去零操作</span><br><span class="line">    private static String removeZero(String chiness)&#123;</span><br><span class="line">        return chiness.replaceAll(&quot;零&quot;,&quot;&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private static long getNum(String chiness,boolean isTen)&#123;</span><br><span class="line">        if(StringUtils.isBlank(chiness))&#123;</span><br><span class="line">            if(isTen)&#123;</span><br><span class="line">                return 1L;</span><br><span class="line">            &#125;</span><br><span class="line">            return 0L;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            return number.get(chiness);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        System.out.println(ChinessToNum.convert(&quot;&quot;));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件合并工具类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 文件合并工具类</span><br><span class="line"> */</span><br><span class="line">public class FileCutUnion &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        File fileDir=new File(&quot;D:\\data&quot;);</span><br><span class="line">        File[] files = fileDir.listFiles();</span><br><span class="line">        FileWriter writer=null;</span><br><span class="line">        try &#123;</span><br><span class="line">            writer=new FileWriter(&quot;D:\\data\\文件合并.txt&quot;, true);</span><br><span class="line">            for (File file:files) &#123;</span><br><span class="line">                FileReader fileReader=null;</span><br><span class="line">                try &#123;</span><br><span class="line">                    fileReader=new FileReader(file);</span><br><span class="line">                    char[] buf=new char[1024];</span><br><span class="line">                    int len;</span><br><span class="line">                    while ((len=fileReader.read(buf))!=-1)&#123;</span><br><span class="line">                        writer.write(buf,0,len);</span><br><span class="line">                        writer.flush();</span><br><span class="line">                    &#125;</span><br><span class="line">                    writer.write(&quot;\n&quot;);</span><br><span class="line">                    writer.flush();</span><br><span class="line">                &#125;catch (Exception e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;finally &#123;</span><br><span class="line">                    if(fileReader!=null)&#123;</span><br><span class="line">                        fileReader.close();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;catch (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;finally &#123;</span><br><span class="line">            if(writer!=null)&#123;</span><br><span class="line">                writer.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void test01()&#123;</span><br><span class="line">        File fileDir=new File(&quot;D:\\data&quot;);</span><br><span class="line">        File[] files = fileDir.listFiles();</span><br><span class="line">        String[] list = fileDir.list();</span><br><span class="line">        for (String fileName:list) &#123;</span><br><span class="line">            System.out.println(fileName);</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.sort(Arrays.asList(files), new Comparator&lt;File&gt;() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public int compare(File o1, File o2) &#123;</span><br><span class="line">                if (o1.isDirectory() &amp;&amp; o2.isFile())</span><br><span class="line">                    return -1;</span><br><span class="line">                if (o1.isFile() &amp;&amp; o2.isDirectory())</span><br><span class="line">                    return 1;</span><br><span class="line">                return o1.getName().compareTo(o2.getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        for (File file:files) &#123;</span><br><span class="line">            System.out.println(file.getName());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;前一篇我已经写过一套代码方案了，基本上能够达到我想要的目的，但是只能开一个线程顺序运行，速度有些限制。于是，我变思考了另一种方案，方案的大体思路是下载页面的时候，启动多个线程进行，每一章分别保存到本地，文件名为章节序号名，最后在合并成一个文件。这样就不存在并发问题了，章节顺序也不会错乱。&lt;br&gt;
    
    </summary>
    
    
      <category term="爬虫" scheme="http://yangyl.top/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>小说爬取</title>
    <link href="http://yangyl.top/2017/11/20/biquge_download/"/>
    <id>http://yangyl.top/2017/11/20/biquge_download/</id>
    <published>2017-11-20T06:30:50.000Z</published>
    <updated>2017-11-22T08:46:33.775Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>一直想利用爬虫做些事情，但是，就是不知道爬什么好，找不到需求。前几天看儒道至圣这本小说，看了一部分之后，想看看里面是否写有李白的侠客行这首诗，于是我先通过目录看了下没看到，于是我便想把它整个下下来，再在里面全文搜索，看看有没有这几个关键字。所以，我想到用爬虫把文章都爬下来，网上下载小说的网站应该也都有，但是，我刚好找到了一个需求，所以，我没有通过网站直接下载txt文件的方式，而是采用，自己写代码的方式。<br><a id="more"></a></p><h4 id="环境依赖"><a href="#环境依赖" class="headerlink" title="环境依赖"></a>环境依赖</h4><p>我用的是以前写的maven项目，只是在里面加了<a href="http://webmagic.io/docs/zh/" target="_blank" rel="noopener">WebMagic</a> (java的一个爬虫框架)的相关依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;us.codecraft&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;webmagic-core&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.7.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;us.codecraft&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;webmagic-extension&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.7.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><p>添加log4j.properties 文件</p><h4 id="页面分析"><a href="#页面分析" class="headerlink" title="页面分析"></a>页面分析</h4><ul><li>url 分析提取<br><img src="https://i.imgur.com/QStuRNq.png" alt=""></li></ul><p><br></p><ul><li>标题分析<br><img src="https://i.imgur.com/kmOGTPu.png" alt=""></li></ul><p><br></p><ul><li>内容分析<br><img src="https://i.imgur.com/xvlfc9k.png" alt=""></li></ul><p><br></p><h4 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h4><p><img src="https://i.imgur.com/ms9TIvW.png" alt="项目结构"></p><h4 id="具体代码"><a href="#具体代码" class="headerlink" title="具体代码"></a>具体代码</h4><ul><li><p>BiQuGePageProcessor.java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 爬虫处理及解析类</span><br><span class="line"> */</span><br><span class="line">public class BiQuGePageProcessor implements PageProcessor &#123;</span><br><span class="line"></span><br><span class="line">    private Site site = Site.me().setRetryTimes(3).setSleepTime(200).setCharset(&quot;UTF-8&quot;).setTimeOut(10000);</span><br><span class="line"></span><br><span class="line">    private String replaceStr = &quot;\n&quot; + (char) 12288 + (char) 12288;//替换后字符串</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void process(Page page) &#123;</span><br><span class="line">        List&lt;String&gt; all = page.getHtml().css(&quot;div.bottem2&quot;).links().all();//获取链接</span><br><span class="line"></span><br><span class="line">//        System.out.println(all.get(2));</span><br><span class="line"></span><br><span class="line">        if (all.get(1).equals(all.get(2))) &#123;//如果下一章链接内容 和目录链接相同 说明到最后一章了</span><br><span class="line">            page.putField(&quot;end&quot;, &quot;end&quot;);//设置结束标记</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            page.addTargetRequest(all.get(2));//添加下一章的链接到处理队列</span><br><span class="line">        &#125;</span><br><span class="line">        //解析文章标题</span><br><span class="line">        String title = page.getHtml().xpath(&quot;//div[@class=bookname]/h1/text()&quot;).toString();</span><br><span class="line">//        System.out.println(title);</span><br><span class="line"></span><br><span class="line">        //解析文档内容</span><br><span class="line">        String content = page.getHtml().xpath(&quot;//div[@id=content]/text()&quot;).toString();</span><br><span class="line">        content = content.replaceAll((char) 12288 + &quot;&#123;2,&#125;&quot;, replaceStr) //(char)12288 全角空格 两个以上全角空格替换为换行符加两个全角空格</span><br><span class="line">                .replaceAll((char) 160 + &quot;&#123;2,&#125;&quot;, replaceStr); // (char)160 半角空格 两个以上半角空格替换为换行符加两个全角空格</span><br><span class="line">//        System.out.println(content);</span><br><span class="line"></span><br><span class="line">        //设置要处理的文件内容</span><br><span class="line">        page.putField(&quot;content&quot;, title + replaceStr + content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Site getSite() &#123;</span><br><span class="line">        return site;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        //指定输出的文件地址</span><br><span class="line">        final FileWriterUtil writer = new FileWriterUtil(&quot;D:\\data\\test12.txt&quot;);</span><br><span class="line">        //启动输出线程</span><br><span class="line">        new Thread(new Runnable() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void run() &#123;</span><br><span class="line">                writer.startWriter();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).start();</span><br><span class="line"></span><br><span class="line">        HttpClientDownloader httpClientDownloader = new HttpClientDownloader();</span><br><span class="line">        //设置代理ip</span><br><span class="line">//        httpClientDownloader.setProxyProvider(SimpleProxyProvider.from(</span><br><span class="line">//                new Proxy(&quot;221.233.62.43&quot;,808)</span><br><span class="line">//                ,new Proxy(&quot;125.124.161.221&quot;,808)));</span><br><span class="line"></span><br><span class="line">        httpClientDownloader.setThread(20);</span><br><span class="line">        //启动爬虫</span><br><span class="line">        Spider.create(new BiQuGePageProcessor())</span><br><span class="line">                .addUrl(&quot;http://www.biqudu.com/0_903/2506200.html&quot;)</span><br><span class="line">                .addPipeline(new NovelPipeline())</span><br><span class="line">                .thread(1).run();//启动多个线程的话，章节顺序可能会错乱</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>NovelPipeline.java</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/***</span><br><span class="line"> * 解析完后的处理类</span><br><span class="line"> * 该类作用不大 可以把代码放进 BiQuGePageProcessor.process里</span><br><span class="line"> */</span><br><span class="line">public class NovelPipeline implements Pipeline &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void process(ResultItems resultItems, Task task) &#123;</span><br><span class="line">        //放入输出队列</span><br><span class="line">        FileWriterUtil.putContent((String) resultItems.get(&quot;content&quot;));</span><br><span class="line">        if (resultItems.get(&quot;end&quot;) != null) &#123;</span><br><span class="line">            FileWriterUtil.putContent((String) resultItems.get(&quot;end&quot;));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>FileWriterUtil.java</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 文件输出类</span><br><span class="line"> */</span><br><span class="line">public class FileWriterUtil &#123;</span><br><span class="line"></span><br><span class="line">    //输出队列</span><br><span class="line">    private static final BlockingQueue&lt;String&gt; queue=new LinkedBlockingDeque(20);</span><br><span class="line"></span><br><span class="line">    //文件名</span><br><span class="line">    private String fileName;</span><br><span class="line"></span><br><span class="line">    public FileWriterUtil(String fileName) throws Exception &#123;</span><br><span class="line">        this.fileName=fileName;</span><br><span class="line">        File file=new File(fileName);</span><br><span class="line">        //校验文件目录和文件是否存在 不存在则创建</span><br><span class="line">        if(!file.getParentFile().exists())&#123;</span><br><span class="line">            file.getParentFile().mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        if(!file.exists())&#123;</span><br><span class="line">            file.createNewFile();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public void startWriter()&#123;</span><br><span class="line">        FileWriter writer = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            // 打开一个写文件器，构造函数中的第二个参数true表示以追加形式写文件</span><br><span class="line">            writer = new FileWriter(fileName, true);</span><br><span class="line">            while (true)&#123;</span><br><span class="line">                String msg = queue.take();</span><br><span class="line">                if(&quot;end&quot;.equals(msg))&#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">                writer.write(msg+System.getProperty(&quot;line.separator&quot;));</span><br><span class="line">                writer.flush();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                if(writer != null)&#123;</span><br><span class="line">                    writer.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //放入队列方法</span><br><span class="line">    public static void putContent(final String msg)&#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                boolean offer = queue.offer(msg, 1, TimeUnit.MINUTES);</span><br><span class="line">                if(!offer)&#123;</span><br><span class="line">                    throw new RuntimeException(&quot;队列已满&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="代码说明"><a href="#代码说明" class="headerlink" title="代码说明"></a>代码说明</h4><p>代码运行可能会有些慢，为了保证章节不会错乱，只开了一个线程，而且，运行过程可能会报错，下载页面超时的原因，解决方法是，<code>private Site site = Site.me().setRetryTimes(3).setSleepTime(200).setCharset(&quot;UTF-8&quot;).setTimeOut(10000);</code>，<br>timeOut的值设置大点会好一些。 或者需要强制结束程序，再将失败的url复制到main方法里面，再次运行就好了。<br><img src="https://i.imgur.com/u301mqY.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;一直想利用爬虫做些事情，但是，就是不知道爬什么好，找不到需求。前几天看儒道至圣这本小说，看了一部分之后，想看看里面是否写有李白的侠客行这首诗，于是我先通过目录看了下没看到，于是我便想把它整个下下来，再在里面全文搜索，看看有没有这几个关键字。所以，我想到用爬虫把文章都爬下来，网上下载小说的网站应该也都有，但是，我刚好找到了一个需求，所以，我没有通过网站直接下载txt文件的方式，而是采用，自己写代码的方式。&lt;br&gt;
    
    </summary>
    
    
      <category term="爬虫" scheme="http://yangyl.top/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>主动推送百度搜索</title>
    <link href="http://yangyl.top/2017/11/17/proactive-push/"/>
    <id>http://yangyl.top/2017/11/17/proactive-push/</id>
    <published>2017-11-17T06:31:06.000Z</published>
    <updated>2017-11-22T08:46:33.794Z</updated>
    
    <content type="html"><![CDATA[<h4 id="环境依赖"><a href="#环境依赖" class="headerlink" title="环境依赖"></a>环境依赖</h4><p>博客搭建好之后，接下准备让百度可以搜索到我的博客，下面是java使用httpClient实现主动推送链接的代码。<br><a id="more"></a><br>首先是搭建maven项目，添加pom依赖,httpclient依赖和junit(测试用可以不加)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;httpclient&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.5.2&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.12&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><h4 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h4><p><img src="https://i.imgur.com/dpOBKcM.png" alt="项目结构"></p><h4 id="push-url-txt文件内容格式"><a href="#push-url-txt文件内容格式" class="headerlink" title="push-url.txt文件内容格式"></a>push-url.txt文件内容格式</h4><p><img src="https://i.imgur.com/kMgUSOM.png" alt="文件内容"></p><h4 id="具体代码如下"><a href="#具体代码如下" class="headerlink" title="具体代码如下"></a>具体代码如下</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> *  百度搜索自动推送代码</span><br><span class="line"> */</span><br><span class="line">public class InitativeBaiduPush &#123;</span><br><span class="line"></span><br><span class="line">    //你的域名</span><br><span class="line">    private static String site=&quot;yangyl.top&quot;;</span><br><span class="line"></span><br><span class="line">    //你的token</span><br><span class="line">    private static String token=&quot;&quot;;</span><br><span class="line"></span><br><span class="line">    //百度推送的地址</span><br><span class="line">    private static String url=&quot;http://data.zz.baidu.com/urls?site=&quot;+site+&quot;&amp;token=&quot;+token;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws IOException &#123;</span><br><span class="line">        String urls = getUrls();//获取提交的url</span><br><span class="line">        if(&quot;&quot;.equals(urls.trim()))&#123;</span><br><span class="line">            System.out.println(&quot;待提交url为空或文件读取失败&quot;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //使用httpClient发送post请求</span><br><span class="line">        CloseableHttpResponse response = null;</span><br><span class="line">        CloseableHttpClient httpClient = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            //请求配置</span><br><span class="line">            RequestConfig config = RequestConfig.custom().setConnectTimeout(60000).setSocketTimeout(15000).build();</span><br><span class="line">            httpClient = HttpClientBuilder.create().setDefaultRequestConfig(config).build();</span><br><span class="line">            HttpPost httpPost=new HttpPost(url);</span><br><span class="line">            httpPost.setHeader(&quot;Content-Type&quot;,&quot;text/plain&quot;);//可以注释到</span><br><span class="line">            StringEntity entity = new StringEntity(urls, Charset.forName(&quot;UTF-8&quot;));</span><br><span class="line">            entity.setContentEncoding(&quot;UTF-8&quot;);</span><br><span class="line">            httpPost.setEntity(entity);</span><br><span class="line">            response = httpClient.execute(httpPost);</span><br><span class="line">            printResult(response);</span><br><span class="line">        &#125;catch (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;finally &#123;</span><br><span class="line">            //关闭连接</span><br><span class="line">            if (response != null) &#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    response.close();</span><br><span class="line">                &#125; catch (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if (httpClient != null) &#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    httpClient.close();</span><br><span class="line">                &#125; catch (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 从文件中获取需要提交的url</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    private static String getUrls()&#123;</span><br><span class="line">        StringBuilder sb=new StringBuilder();</span><br><span class="line">        try &#123;</span><br><span class="line">            InputStream stream = InitativeBaiduPush.class.getClassLoader().getResourceAsStream(&quot;push-url.txt&quot;);</span><br><span class="line">            BufferedReader br=new BufferedReader(new InputStreamReader(stream));</span><br><span class="line">            int len;</span><br><span class="line">            char[] cbuf=new char[1024];</span><br><span class="line">            while ((len=br.read(cbuf))!=-1)&#123;</span><br><span class="line">                sb.append(cbuf,0,len);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            //下面这种方法也行</span><br><span class="line">//            String s;</span><br><span class="line">//            while ((s=br.readLine())!=null)&#123;</span><br><span class="line">//                sb.append(s).append(&quot;\n&quot;);</span><br><span class="line">//            &#125;</span><br><span class="line">//            System.out.println(sb.toString().length());</span><br><span class="line">//            return sb.toString().replaceAll(&quot;\\n+$&quot;,&quot;&quot;);//去掉最后的回车符，该行可以注释到</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        return sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 打印响应结果到控制台</span><br><span class="line">     * @param response</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    private static void printResult(CloseableHttpResponse response) throws Exception &#123;</span><br><span class="line">        int code = response.getStatusLine().getStatusCode();</span><br><span class="line">        System.out.println(code);</span><br><span class="line">//        System.out.println(response.getStatusLine().getReasonPhrase());</span><br><span class="line">        if(code==200)&#123;</span><br><span class="line">            System.out.println(&quot;主动推送成功&quot;);</span><br><span class="line">        &#125;else &#123;</span><br><span class="line">            System.out.println(&quot;主动推送失败&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        if(response.getEntity()!=null)&#123;</span><br><span class="line">            System.out.println(EntityUtils.toString(response.getEntity(), &quot;UTF-8&quot;));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void testGetUrl()&#123;</span><br><span class="line">//        System.out.println(getUrls().length());</span><br><span class="line">        System.out.println(getUrls());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="响应结果"><a href="#响应结果" class="headerlink" title="响应结果"></a>响应结果</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">200</span><br><span class="line">主动推送成功</span><br><span class="line">&#123;&quot;remain&quot;:4999990,&quot;success&quot;:2&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;环境依赖&quot;&gt;&lt;a href=&quot;#环境依赖&quot; class=&quot;headerlink&quot; title=&quot;环境依赖&quot;&gt;&lt;/a&gt;环境依赖&lt;/h4&gt;&lt;p&gt;博客搭建好之后，接下准备让百度可以搜索到我的博客，下面是java使用httpClient实现主动推送链接的代码。&lt;br&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yangyl.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>markdown学习一</title>
    <link href="http://yangyl.top/2017/11/16/markdown-learn(1)/"/>
    <id>http://yangyl.top/2017/11/16/markdown-learn(1)/</id>
    <published>2017-11-16T01:25:20.000Z</published>
    <updated>2017-11-22T08:46:33.752Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>　　这几天学习markdown，看了下它的基本语法，感觉不是很多，但是，等到自己动手写的时候，感觉不怎么顺利。所以再下面记录下学习中遇到的问题。注：本文仅供个人记录使用，如有不对之处，请谅解。<br><a id="more"></a></p><h3 id="一-首行缩进"><a href="#一-首行缩进" class="headerlink" title="一. 首行缩进"></a>一. 首行缩进</h3><p>　　按照往常我们写作的习惯都喜欢首行缩进，这样看着有条理一些。所以我看了下markdown的语法，主要是看别人写的博客，没有看官方的文档，发现并没有说明怎么首行缩进的，于是我又查了查，发现可以基于html中的 <code>&amp;nbsp;</code>,因为markdown支持html解析。但是中文的效果不怎么好,然后有试了下 <code>&amp;ensp;</code>,效果强了点，是半角的空格，接着又试了下 <code>&amp;emsp;</code>，是全角的空格,感觉很好两个就是中文的两个空格。最后又试了下把输入法切换成全角，再敲两个空格也可以。</p><h3 id="二-居中"><a href="#二-居中" class="headerlink" title="二. 居中"></a>二. 居中</h3><p>　　文字居中显示，md中好像没有居中的语法，但是也可以首行缩进一样，借助html的语法，一开始使用的是 <code>&lt;center&gt;&lt;/center&gt;</code>,但是该标签已经废弃，需要使用css。因为我要实现的样式很简单，不想单独写css,于是我使用 <code>&lt;div align=&quot;center&quot; style=&quot;font-size:25px&quot;&gt;文字展示&lt;/div&gt;</code>，这样可以实现文字居中并能够设置字体的大小。</p><h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><ul><li><a href="http://blog.csdn.net/mountzf/article/details/51714763" target="_blank" rel="noopener">markdown中实现首行缩进的两种方法</a></li><li><a href="http://blog.csdn.net/witnessai1/article/details/52551362" target="_blank" rel="noopener">Markdown 语法手册 （完整整理版）</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;　　这几天学习markdown，看了下它的基本语法，感觉不是很多，但是，等到自己动手写的时候，感觉不怎么顺利。所以再下面记录下学习中遇到的问题。注：本文仅供个人记录使用，如有不对之处，请谅解。&lt;br&gt;
    
    </summary>
    
    
      <category term="markdown" scheme="http://yangyl.top/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>hexo 环境配置</title>
    <link href="http://yangyl.top/2017/11/14/hexo-environment/"/>
    <id>http://yangyl.top/2017/11/14/hexo-environment/</id>
    <published>2017-11-14T03:11:17.000Z</published>
    <updated>2017-11-22T07:43:38.910Z</updated>
    
    <content type="html"><![CDATA[<h3 id="window-环境配置"><a href="#window-环境配置" class="headerlink" title="window 环境配置"></a>window 环境配置</h3><h4 id="node安装及git安装"><a href="#node安装及git安装" class="headerlink" title="node安装及git安装"></a>node安装及git安装</h4><pre><code>这个没有什么好说的，直接百度下载安装包，安装就好了。</code></pre><a id="more"></a><h4 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h4><pre><code>这个看网上的教程写的基本上都是直接在gitbash中执行 npm install -g hexo-cli,但是，我执行之后反应很慢，或直接没有反应，安装不成功。我感觉是网的问题，后来百度发现可以替换官方的源为淘宝的源，命令为npm install -g cnpm --registry=https://registry.npm.taobao.org然后,就可以使用cnpm 命令了，所以执行 cnpm install -g hexo-cli执行 hexo version 查看安装版本</code></pre><h4 id="hexo项目克隆"><a href="#hexo项目克隆" class="headerlink" title="hexo项目克隆"></a>hexo项目克隆</h4><pre><code>执行 hexo init 命令，我的电脑克隆项目成功但是执行 npm install 下载依赖没有反应，使用 cnpm install 下载成功</code></pre><h4 id="hexo项目本地运行"><a href="#hexo项目本地运行" class="headerlink" title="hexo项目本地运行"></a>hexo项目本地运行</h4><pre><code>hexo g #完整命令为hexo generate,用于生成静态文件hexo s #完整命令为hexo server,用于启动服务器，主要用来本地预览hexo d #完整命令为hexo deploy,用于将本地文件发布到github上hexo n #完整命令为hexo new,用于新建一篇文章</code></pre><h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><ul><li><a href="http://tengj.top/2016/02/22/hexo1/" target="_blank" rel="noopener">hexo干货系列：（一）hexo+gitHub搭建个人独立博客</a></li></ul><ul><li><a href="http://www.cnblogs.com/zhvon/p/5351043.html" target="_blank" rel="noopener">hexo的环境搭建</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;window-环境配置&quot;&gt;&lt;a href=&quot;#window-环境配置&quot; class=&quot;headerlink&quot; title=&quot;window 环境配置&quot;&gt;&lt;/a&gt;window 环境配置&lt;/h3&gt;&lt;h4 id=&quot;node安装及git安装&quot;&gt;&lt;a href=&quot;#node安装及git安装&quot; class=&quot;headerlink&quot; title=&quot;node安装及git安装&quot;&gt;&lt;/a&gt;node安装及git安装&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;这个没有什么好说的，直接百度下载安装包，安装就好了。
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yangyl.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yangyl.top/2017/11/14/hello-world/"/>
    <id>http://yangyl.top/2017/11/14/hello-world/</id>
    <published>2017-11-14T02:11:17.000Z</published>
    <updated>2017-11-21T00:51:10.911Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><a id="more"></a><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
